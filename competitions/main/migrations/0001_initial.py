# Generated by Django 4.2 on 2023-05-18 15:31

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('unique_id', models.CharField(max_length=8, unique=True)),
                ('photo', models.ImageField(blank=True, default='static/images/no_foto.jpg', null=True, upload_to='static/images/foto/')),
                ('username', models.CharField(default='', max_length=30, unique=True, verbose_name='Username')),
                ('password', models.CharField(default='', max_length=128, verbose_name='Password')),
                ('password2', models.CharField(default='', max_length=128, verbose_name='Password')),
                ('first_name', models.CharField(max_length=50, verbose_name='First name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last name')),
                ('email', models.EmailField(default='', max_length=50, unique=True, verbose_name='Email')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Date of birth')),
                ('country', models.CharField(max_length=3, verbose_name='Country')),
                ('rating', models.IntegerField(default=1000, verbose_name='Rating')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unique_id', models.CharField(default='', max_length=8, unique=True)),
                ('name', models.CharField(max_length=30, verbose_name='Name')),
                ('place', models.CharField(max_length=30, verbose_name='Place')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('capacity', models.IntegerField(verbose_name='Capacity')),
                ('date_of_start', models.DateTimeField(verbose_name='Start')),
                ('date_of_end', models.DateTimeField(verbose_name='End')),
                ('opened', models.BooleanField(default=True, verbose_name='Registration')),
                ('organizers', models.ManyToManyField(related_name='organized_tournaments', to=settings.AUTH_USER_MODEL)),
                ('players', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point', models.FloatField(default=0.0, verbose_name='Points')),
                ('tie_break1', models.FloatField(default=0.0, verbose_name='Tie Break 1')),
                ('tie_break2', models.FloatField(default=0.0, verbose_name='Tie Break 1')),
                ('tie_break3', models.FloatField(default=0.0, verbose_name='Tie Break 1')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tournament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.tournament')),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.CharField(max_length=10, verbose_name='Time control')),
                ('result', models.CharField(max_length=10, verbose_name='Result')),
                ('date', models.DateTimeField(verbose_name='Start game')),
                ('players', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
